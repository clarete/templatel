Template      <- (Text / Statement / Expression)+

Text          <- (!(_EXPR_OPEN / _STM_OPEN / _COMMENT_OPEN) .)+

Expression    <- _EXPR_OPEN Expr _EXPR_CLOSE

Statement     <- IfStatement / ForStatement

IfStatement   <- _If Expr _STM_CLOSE Template (Elif / Else)+
               / _If Expr _STM_CLOSE Template _EndIf
Elif          <- _STM_OPEN _elif Expr _STM_CLOSE Template
Else          <- _STM_OPEN _else _STM_CLOSE Template _EndIf
_If           <- _STM_OPEN _if
_EndIf        <- _STM_OPEN _endif _STM_CLOSE

ForStatement  <- _For Expr _in Expr _STM_CLOSE Template _EndFor
_For          <- _STM_OPEN _for
_EndFor       <- _STM_OPEN _endfor _STM_CLOSE

Expr          <- Filter
Filter        <- Logical (_PIPE Logical)*
Logical       <- BitLogical ((AND / OR) BitLogical)*
BitLogical    <- Comparison ((BAND / BXOR / BOR) Comparison)*
Comparison    <- BitShifting ((EQ / NEQ / LTE / GTE / LT / GT) BitShifting)*
BitShifting   <- Term ((RSHIFT / LSHIFT) Term)*

Term          <- Factor ((PLUS / MINUS) Factor)*
Factor        <- Power ((STAR / DSLASH / SLASH) Power)*

Power         <- Unary ((POWER / MOD) Unary)*

UnaryOp       <- PLUS / MINUS / NOT / BNOT
Unary         <- UnaryOp Unary / UnaryOp Primary / Primary
Primary       <- _PAREN_OPEN Expr _PAREN_CLOSE
               / Element

Attribute     <- Identifier (_dot Identifier)+
Element       <- Value / Attribute / FnCall / Identifier

FnCall        <- Identifier ParamList
ParamList     <- _PAREN_OPEN Expr (_COMMA Expr)* _PAREN_CLOSE
               / _PAREN_OPEN _PAREN_CLOSE
Value         <- Number / BOOL / NIL / String
Number        <- BIN / HEX / FLOAT / INT
String        <- _QUOTE (!_QUOTE .)* _QUOTE _
BOOL          <- ('true' / 'false')         _
NIL           <- 'nil'                      _

Identifier    <- [a-zA-Z_][a-zA-Z0-9_]*  _
INT           <- [0-9]+                  _
FLOAT         <- [0-9]* '.' [0-9]+       _
BIN           <- '0b' [0-1]+             _
HEX           <- '0x' [0-9a-fA-F]+       _

# Puctuation
_EXPR_OPEN     <- '{{' _
_EXPR_CLOSE    <- '}}' _
_STM_OPEN      <- '{%' _
_STM_CLOSE     <- '%}' _
_COMMENT_OPEN  <- '{#' _
_COMMENT_CLOSE <- '#}' _
_PAREN_OPEN    <- '('  _
_PAREN_CLOSE   <- ')'  _
_QUOTE         <- '"'  _
_COMMA         <- ','  _
_PIPE           <- '|'      _
_dot            <- '.'      _

## Arithmetic Operators
PLUS            <- '+'      _
MINUS           <- '-'      _
STAR            <- '*'      _
SLASH           <- '/'      _
DSLASH          <- '//'     _
MOD             <- '@'      _
POWER           <- '**'     _

## Comparison Operators
EQ              <- '=='     _
NEQ             <- '!='     _
LT              <- '<'      _
GT              <- '>'      _
LTE             <- '<='     _
GTE             <- '>='     _

## Bit Shifting
RSHIFT          <- '>>'     _
LSHIFT          <- '<<'     _

## Binary Bit Operators
BAND            <- '&'      _
BOR             <- '||'     _
BXOR            <- '^'      _
BNOT            <- '~'      _

## Logic Operators
AND             <- 'and'    _
OR              <- 'or'     _
NOT             <- 'not'    _

# Keywords
_in             <- 'in'     _
_is             <- 'is'     _
_if             <- 'if'     _
_else           <- 'else'   _
_elif           <- 'elif'   _
_endif          <- 'endif'  _
_for            <- 'for'    _
_endfor         <- 'endfor' _

# Whitespace Handling
_               <- (Space / Comment)*
Comment         <- _COMMENT_OPEN (!_COMMENT_CLOSE .)* _COMMENT_CLOSE
Space           <- ' ' / '\t' / _EOL
_EOL            <- '\r\n' / '\n' / '\r'
_EndOfFile      <- !.
